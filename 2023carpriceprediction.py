# -*- coding: utf-8 -*-
"""2023CarPricePrediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OQXoHeMdxM1o2HNY_JQMlC1O7lPc8pbX

***Import Dependcies***
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn import metrics
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.ensemble import RandomForestRegressor
from sklearn.linear_model import LinearRegression
from sklearn.linear_model import Lasso

"""***Data Collection and Preprocessing***"""

data =pd.read_csv('car data.csv')

data.head()

"""***Data Summary***"""

data.info()

data.shape

data.isnull().sum()

"""***Data Analysis***"""

data.describe()

"""***See Catogorical Values***"""

print(data.Fuel_Type.value_counts())
print(data.Seller_Type.value_counts())
print(data['Transmission'].value_counts())

"""***Label Encoding***"""

from sklearn.preprocessing  import LabelEncoder
encoder=LabelEncoder()
data['Fuel_Type']=encoder.fit_transform(data['Fuel_Type'])
data['Seller_Type']=encoder.fit_transform(data['Seller_Type'])
data['Transmission']=encoder.fit_transform(data['Transmission'])

data.head()

"""***Train Test Split***"""

X=data.drop(['Car_Name','Selling_Price'],axis=1)
Y=data['Selling_Price']

X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,random_state=2)

"""***Model Training***"""

lin_reg=LinearRegression()
lin_reg.fit(X_train,Y_train)

"""***Testing***"""

pred=lin_reg.predict(X_test)
print(pred)
print(Y_test)

score=metrics.r2_score(Y_test,pred)
print(score)

"""***Visualization***"""

plt.scatter(Y_test,pred)
plt.xlabel("Actual Price")
plt.ylabel("Predicted Price")
plt.title("Actual  Prices vs Predicted Prices")
plt.show()

"""***Application Phase***"""

Year=input("Enter Year").strip()
Present_Price=input("Enter Present-Price: ").strip()
Kms_Driven=input(" Enter Kms_Driven: ").strip()
Fuel_Type=input("Enter Fuel_Type: ").strip()
Seller_Type=input("Enter Seller Type: ").strip()
Transmission=input("Enter Transmission: ").strip()
Owner=input("Enter Owner: ").strip()

data = {
    'Year': [Year],
    'Present_Price': [Present_Price],
    'Kms_Driven': [Kms_Driven],
    'Fuel_Type': [Fuel_Type],
    'Seller_Type': [Seller_Type],
    'Transmission': [Transmission],
    'Owner': [Owner]
}
df=pd.DataFrame(data)
df.head()

df['Fuel_Type']=encoder.fit_transform(df['Fuel_Type'])
df['Seller_Type']=encoder.fit_transform(df['Seller_Type'])
df['Transmission']=encoder.fit_transform(df['Transmission'])

predict_car_price=lin_reg.predict(df)
print(predict_car_price)